# This is a basic workflow to help you get started with Actions

name: Pack to Powershell Gallery

# Controls when the workflow will run
on:
  push:
    branches:
      - Production
    paths:
      - 'FoxHelper/**'
  pull_request:
    types: [closed]
    branches:
      - Production
    paths:
      - 'FoxHelper/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  psgallery_publish:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        
      - name: Publishing
        working-directory: .
        env:
         NUGET_KEY: ${{ secrets.NUGET_KEY }}
        run: |
          'Importing Required Modules'
          install-module ImportExcel -force
          import-module ImportExcel
          import-module PowerShellGet
          'Importing Module'
          get-childitme -path '/home/runner/work/FoxHelper/FoxHelper'
          Import-Module /home/runner/work/FoxHelper/FoxHelper/FoxHelper.psd1 -verbos
          'Getting last version from PS Gallery'
          [string]$Version=Find-Module -Name FoxHelper | Where-Object -Property Repository -EQ PSGallery |Select-Object -ExpandProperty Version
          "Current PSGallery Version is: $Version"
          [int]$Revision = ($Version.Substring(($Version.lastIndexOf('.'))+1))
          $Revision+=1
          $Version=$Version.Substring(0, $Version.lastIndexOf('.'))
          $Version=$Version + '.' + $Revision
          "Updating Module Manifest Version to $Version"
          Update-ModuleManifest -Path '/home/runner/work/FoxHelper/FoxHelper/FoxHelper/FoxHelper.psd1' -ModuleVersion $Version
          "Attempting Upload of Version $Version to PSGallery"
          Publish-Module -Path /home/runner/work/FoxHelper/FoxHelper/FoxHelper  -NuGetApiKey $env:NUGET_KEY -verbos
        shell: pwsh
